class BackoffDelay:
	long minAmount;
	long maxAmount;
	long current;
	
	int fails;
	Random random;
	
	Backoff(long min, long max):
		minAmount = min;
		maxAmount = max;
		current = min;
		fails = 0;
		random = new Random();
	
	reset:
		fails = 0;
		current = minAmount;
		
	long NextDelay:
		fails++;
		long delay = (long)((double)current * 2.0 * NextValue(random));
		current = Math.Min(current + delay, maxAmount);
		return current;
	
	long CurrentDelay:
		return current;
	
	int Failures:
		return fails;
	
	static float NextValue(Random random)
	{
		double mantissa = (random.NextDouble() * 2.0) - 1.0;
		double exponent = Math.Pow(2.0, random.Next(-126, 128));
		return (mantissa * exponent);
	}
	